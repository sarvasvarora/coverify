"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/cover-generator",{

/***/ "./src/spotify/playlists.js":
/*!**********************************!*\
  !*** ./src/spotify/playlists.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Playlists; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst SPOTIFY_PLAYLIST_ENDPOINT = \"https://api.spotify.com/v1/me/playlists\";\nconst SPOTIFY_USER_ENDPOINT = \"https://api.spotify.com/v1/me/\";\nconst AUDIO_FEATURES_ENDPOINT = \"https://api.spotify.com/v1/audio-features\";\nconst ML_COVER_GENERATION_ENDPOINT = \"http://localhost:8000/generate-covers\";\nconst getUserId = async (token, setUserId)=>{\n    const res = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(SPOTIFY_USER_ENDPOINT, {\n        headers: {\n            Authorization: \"Bearer \".concat(token)\n        }\n    });\n    console.log(\"USERID: \".concat(res.data.id));\n    setUserId(res.data.id);\n};\nconst getPlaylists = async (token, userId, setPlaylists)=>{\n    // TODO: handle pagination i.e., extract next set of playlists if total #playlists > 50 (max limit)\n    const res = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(SPOTIFY_PLAYLIST_ENDPOINT, {\n        headers: {\n            Authorization: \"Bearer \".concat(token)\n        },\n        params: {\n            limit: 50\n        }\n    });\n    let resPlaylists = res.data.items;\n    resPlaylists = resPlaylists.filter((p)=>p.owner.id == userId);\n    console.log(\"PLAYLISTS\");\n    console.log(resPlaylists);\n    setPlaylists(resPlaylists);\n};\nconst generateCovers = (e)=>{\n    e.preventDefault();\n    const token = window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\");\n    let data = e.target.dataset;\n    console.log(data);\n    const TRACKS_ENDPOINT = data.playlistTracksEndpoint;\n    axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(TRACKS_ENDPOINT, {\n        headers: {\n            Authorization: \"Bearer \".concat(token)\n        }\n    }).then((res)=>{\n        const token = window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\");\n        const tracks = res.data.items;\n        let trackIds = [];\n        let trackNames = [];\n        let accousticness = [];\n        let danceability = [];\n        let energy = [];\n        let instrumentalness = [];\n        let speechiness = [];\n        let tempo = [];\n        let valence = [];\n        let mlCoverGenerationReq = [];\n        tracks.forEach((track)=>{\n            trackIds.push(track.track.id);\n            trackNames.push(track.track.name);\n        });\n        for (let trackId of trackIds){\n            axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(\"\".concat(AUDIO_FEATURES_ENDPOINT, \"/\").concat(trackId), {\n                headers: {\n                    Authorization: \"Bearer \".concat(token)\n                }\n            }).then((res)=>{\n                const audioData = res.data;\n                console.log(audioData);\n                accousticness.push(audioData.accousticness);\n                danceability.push(audioData.danceability);\n                energy.push(audioData.energy);\n                instrumentalness.push(audioData.instrumentalness);\n                speechiness.push(audioData.speechiness);\n                tempo.push(audioData.tempo);\n                valence.push(audioData.valence);\n            });\n        }\n        let sum = (a, b)=>a + b;\n        let avgAccousticness = accousticness.reduce(sum, 0) / trackIds.length;\n        let avgDanceability = danceability.reduce(sum, 0) / trackIds.length;\n        let avgEnergy = energy.reduce(sum, 0) / trackIds.length;\n        let avgInstrumentalness = instrumentalness.reduce(sum, 0) / trackIds.length;\n        let avgSpeechiness = speechiness.reduce(sum, 0) / trackIds.length;\n        let avgTempo = tempo.reduce(sum, 0) / trackIds.length;\n        let avgValence = valence.reduce(sum, 0) / trackIds.length;\n        for(let i = 0; i < trackIds.length; i++){\n            mlCoverGenerationReq.push({\n                \"name\": trackNames[i],\n                \"accousticness\": accousticness[i],\n                \"danceability\": danceability[i],\n                \"energy\": energy[i],\n                \"instrumentalness\": instrumentalness[i],\n                \"speechiness\": speechiness[i],\n                \"tempo\": tempo[i],\n                \"valence\": valence[i]\n            });\n        }\n        axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].post(ML_COVER_GENERATION_ENDPOINT, {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(mlCoverGenerationReq)\n        }).then((res)=>{\n            console.log(res);\n        });\n    });\n};\nfunction Playlists() {\n    _s();\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [playlists, setPlaylists] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // get the token from the local storage\n    // let token; //= window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\");\n    // useEffect(() => {\n    //     token = window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\");\n    // });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const token = window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\");\n        // obtain the user's playlists\n        getUserId(token, setUserId);\n        getPlaylists(token, userId, setPlaylists);\n    }, []);\n    // useEffect(() => {\n    //     const hash = window.location.hash\n    //     token = window.localStorage.getItem(\"SPOTIFY_AUTH_TOKEN\")\n    //     if (!token && hash) {\n    //         token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n    //         window.location.hash = \"\"\n    //         window.localStorage.setItem(\"SPOTIFY_AUTH_TOKEN\", token)\n    //     }\n    //     setToken(token)\n    // }, [])\n    let arr = [];\n    for (let playlist of playlists){\n        arr.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: generateCovers,\n                \"data-playlist-id\": playlist.id,\n                \"data-playlist-tracks-endpoint\": playlist.tracks.href,\n                children: playlist.name\n            }, void 0, false, {\n                fileName: \"/Users/sarvasvarora/dev/coverify/frontend/coverify/src/spotify/playlists.js\",\n                lineNumber: 164,\n                columnNumber: 17\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/sarvasvarora/dev/coverify/frontend/coverify/src/spotify/playlists.js\",\n            lineNumber: 163,\n            columnNumber: 13\n        }, this));\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n        children: arr\n    }, void 0, false, {\n        fileName: \"/Users/sarvasvarora/dev/coverify/frontend/coverify/src/spotify/playlists.js\",\n        lineNumber: 171,\n        columnNumber: 9\n    }, this);\n}\n_s(Playlists, \"bKVGTTDES52tbWJnjOeZaCd3XS0=\");\n_c = Playlists;\nvar _c;\n$RefreshReg$(_c, \"Playlists\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/spotify/playlists.js\n"));

/***/ })

});